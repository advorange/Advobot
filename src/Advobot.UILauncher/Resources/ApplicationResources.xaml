<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:converters="clr-namespace:Advobot.UILauncher.Classes.Converters"
                    xmlns:enums="clr-namespace:Advobot.UILauncher.Enums"
                    mc:Ignorable="d">

    <!-- Application wide resources, mainly colors -->
    <SolidColorBrush x:Key="{x:Static enums:ColorTarget.BaseBackground}">#FFFFFF</SolidColorBrush>
    <SolidColorBrush x:Key="{x:Static enums:ColorTarget.BaseForeground}">#000000</SolidColorBrush>
    <SolidColorBrush x:Key="{x:Static enums:ColorTarget.BaseBorder}">#ABADB3</SolidColorBrush>
    <SolidColorBrush x:Key="{x:Static enums:ColorTarget.ButtonBackground}">#DDDDDD</SolidColorBrush>
    <SolidColorBrush x:Key="{x:Static enums:ColorTarget.ButtonBorder}">#707070</SolidColorBrush>
    <SolidColorBrush x:Key="{x:Static enums:ColorTarget.ButtonDisabledBackground}">#F4F4F4</SolidColorBrush>
    <SolidColorBrush x:Key="{x:Static enums:ColorTarget.ButtonDisabledForeground}">#888888</SolidColorBrush>
    <SolidColorBrush x:Key="{x:Static enums:ColorTarget.ButtonDisabledBorder}">#ADB2B5</SolidColorBrush>
    <SolidColorBrush x:Key="{x:Static enums:ColorTarget.ButtonMouseOverBackground}">#BEE6FD</SolidColorBrush>
    <Style x:Key="{x:Static enums:OtherTarget.ButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource {x:Static enums:ColorTarget.BaseBackground}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static enums:ColorTarget.BaseForeground}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static enums:ColorTarget.BaseBorder}}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style TargetType="Button">
                    <Style.Setters>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border>
                                        <Rectangle Margin="2" StrokeThickness="1.0" Stroke="#60000000" StrokeDashArray="1.0,2.0"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style.Setters>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="ButtonControlTemplate" TargetType="Button">
                    <Border Name="CTBorder" BorderThickness="1"
                            Background="{DynamicResource {x:Static enums:ColorTarget.BaseBackground}}"
                            BorderBrush="{DynamicResource {x:Static enums:ColorTarget.BaseBorder}}">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CTBorder" Property="Background"
                                    Value="{DynamicResource {x:Static enums:ColorTarget.ButtonMouseOverBackground}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CTBorder" Property="Background" 
                                    Value="{DynamicResource {x:Static enums:ColorTarget.ButtonDisabledBackground}}"/>
                            <Setter TargetName="CTBorder" Property="BorderBrush" 
                                    Value="{DynamicResource {x:Static enums:ColorTarget.ButtonDisabledBorder}}"/>
                            <Setter TargetName="CTBorder" Property="Button.Foreground"
                                    Value="{DynamicResource {x:Static enums:ColorTarget.ButtonDisabledForeground}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Putting this here so the based on thing doesn't keep displaying an error in the error list -->
    <Style x:Key="EnableSearchStyle" TargetType="Button" BasedOn="{StaticResource {x:Static enums:OtherTarget.ButtonStyle}}">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Text.Length, ElementName=GuildNameInput}" Value="0"/>
                    <Condition Binding="{Binding Text.Length, ElementName=GuildIdInput}" Value="0"/>
                </MultiDataTrigger.Conditions>

                <MultiDataTrigger.Setters>
                    <Setter Property="IsEnabled" Value="False"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding SelectedItem, ElementName=FileTypeComboBox}" Value="{x:Null}">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>